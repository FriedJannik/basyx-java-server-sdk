# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Start Docker Images

on:
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '.github/ISSUE_TEMPLATE/**'
      - '.github/CODE_OF_CONDUCT.md'
      - '.github/CODING_CONVENTIONS.md'
      - '.github/CONTRIBUTING.md'
      - '.github/dependabot.yml'
      - '.github/pull_request_template.md'
      - '.github/SECURITY.md'
      - 'docs/**'
      - 'examples/**'
      - 'README.md'
      - '.gitattributes'
      - '.gitignore'
      - 'LICENSE'
      - 'NOTICE'

env:
  VERSION: 2.0.0-SNAPSHOT
  MVN_ARGS_BUILD_BASYX_NO_TESTS: -DskipTests

jobs:
  build-test-aas-repository:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Build AAS Repository Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasrepository.component"

      - name: Test AAS Repository Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/aas-repository ${VERSION} test_aas_repository

      - name: Clean up
        run: exit 0

  build-test-aas-environment:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build AAS Environment Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasenvironment.component"

      - name: Test AAS Environment Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/aas-environment ${VERSION} test_aas_environment

      - name: Clean up
        run: exit 0

  build-test-concept-description-repository:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build Concept Description Repository Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.conceptdescriptionrepository.component"

      - name: Test Concept Description Repository Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/conceptdescription-repository ${VERSION} test_conceptdescription_repository

      - name: Clean up
        run: exit 0

  build-test-aas-discovery:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build AAS Discovery Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasdiscoveryservice.component"

      - name: Test AAS Discovery Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/aas-discovery ${VERSION} test_aas_discovery

      - name: Clean up
        run: exit 0

  build-test-aasx-fileserver:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build AASX File Server Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasxfileserver.component"

      - name: Test AASX File Server Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/aasxfileserver ${VERSION} test_aasxfileserver

      - name: Clean up
        run: exit 0

  build-test-submodel-repository:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build Submodel Repository Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelrepository.component"

      - name: Test Submodel Repository Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/submodel-repository ${VERSION} test_submodel_repository

      - name: Clean up
        run: exit 0

  build-test-submodel-service:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build Submodel Service Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelservice.example"

      - name: Test Submodel Service Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/submodel-service ${VERSION} test_submodel_service

      - name: Clean up
        run: exit 0

  build-test-aas-registry-kafka-mem:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build AAS Registry Kafka Mem Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasregistry-service-release-kafka-mem"

      - name: Test AAS Registry Kafka Mem Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/aas-registry-kafka-mem ${VERSION} test_aas_registry_kafka_mem

      - name: Clean up
        run: exit 0

  build-test-aas-registry-kafka-mongodb:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build AAS Registry Kafka MongoDB Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasregistry-service-release-kafka-mongodb"

      - name: Test AAS Registry Kafka MongoDB Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/aas-registry-kafka-mongodb ${VERSION} test_aas_registry_kafka_mongodb

      - name: Clean up
        run: exit 0

  build-test-aas-registry-log-mem:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build AAS Registry Log Mem Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasregistry-service-release-log-mem"

      - name: Test AAS Registry Log Mem Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/aas-registry-log-mem ${VERSION} test_aas_registry_log_mem

      - name: Clean up
        run: exit 0

  build-test-aas-registry-log-mongodb:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build AAS Registry Log MongoDB Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.aasregistry-service-release-log-mongodb"

      - name: Test AAS Registry Log MongoDB Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/aas-registry-log-mongodb ${VERSION} test_aas_registry_log_mongodb

      - name: Clean up
        run: exit 0

  build-test-submodel-registry-kafka-mem:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build Submodel Registry Kafka Mem Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelregistry-service-release-kafka-mem"

      - name: Test Submodel Registry Kafka Mem Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/submodel-registry-kafka-mem ${VERSION} test_submodel_registry_kafka_mem

      - name: Clean up
        run: exit 0

  build-test-submodel-registry-kafka-mongodb:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build Submodel Registry Kafka MongoDB Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelregistry-service-release-kafka-mongodb"

      - name: Test Submodel Registry Kafka MongoDB Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/submodel-registry-kafka-mongodb ${VERSION} test_submodel_registry_kafka_mongodb

      - name: Clean up
        run: exit 0

  build-test-submodel-registry-log-mem:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build Submodel Registry Log Mem Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelregistry-service-release-log-mem"

      - name: Test Submodel Registry Log Mem Docker Image
        run: chmod +x ./.github/workflows/scripts/build_start_docker_image.sh && ./.github/workflows/scripts/build_start_docker_image.sh test/submodel-registry-log-mem ${VERSION} test_submodel_registry_log_mem

      - name: Clean up
        run: exit 0

  build-test-submodel-registry-log-mongodb:

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Build BaSyx
        run: |
          mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}

      - name: Build Submodel Registry Log MongoDB Docker Image
        run: |
          mvn package -DskipTests -Ddocker.namespace=test --pl "org.eclipse.digitaltwin.basyx:basyx.submodelregistry-service-release-log-mongodb"

      - name: Test Submodel Registry Log MongoDB Docker Image
        run: |
          docker compose --project-directory ./ci -f ./ci/test-submodel-registry-log-mongodb.yml up -d

          # Initialize variables
          max_checks=24  # 2 minutes total (120 seconds / 5 seconds per check)
          sleep_interval=5  # Interval in seconds between checks
          check_count=0

          # Loop to check health status
          while [ $check_count -lt $max_checks ]; do
            if [ "$(docker inspect --format='{{.State.Health.Status}}' test_submodel_registry_log_mongodb)" == "healthy" ]; then
              echo "Submodel Registry Log MongoDB started successfully and is healthy."
              break
            else
              echo "Waiting for Submodel Registry Log MongoDB to become healthy..."
              check_count=$((check_count + 1))
              sleep $sleep_interval
            fi
          done

          # If the container is still not healthy after the loop
          if [ $check_count -eq $max_checks ]; then
            echo "Submodel Registry Log MongoDB failed to start or is unhealthy after 2 minutes."
            docker logs test_submodel_registry_log_mongodb
            exit 1
          fi

          # Stop and remove the container after testing
          docker stop test_submodel_registry_log_mongodb
          docker rm test_submodel_registry_log_mongodb

      - name: Clean up
        run: exit 0
  test-basyx-aasenvironment:
    runs-on: ubuntu-latest
    name: Test BaSyx AAS Environment
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci -f ./ci/docker-compose-ci.yml up -d --wait
      - name: Build BaSyx
        run: mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Install BaSyx
        run: mvn clean install -f "basyx.aasenvironment/pom.xml"
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down
  test-basyx-aasrepository:
    runs-on: ubuntu-latest
    name: Test BaSyx AAS Repository
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci -f ./ci/docker-compose-ci.yml up -d --wait
      - name: Build BaSyx
        run: mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Install BaSyx
        run: mvn clean install -f "basyx.aasrepository/pom.xml"
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down
  test-basyx-aasservice:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci -f ./ci/docker-compose-ci.yml up -d --wait
      - name: Build BaSyx
        run: mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Install BaSyx
        run: mvn clean install -f "basyx.aasservice/pom.xml"
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down
  test-basyx-submodelrepository:
    runs-on: ubuntu-latest
    name: Test BaSyx Submodel Repository
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci -f ./ci/docker-compose-ci.yml up -d --wait
      - name: Build BaSyx
        run: mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Install BaSyx
        run: mvn clean install -f "basyx.submodelrepository/pom.xml"
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down
  test-basyx-submodelservice:
    runs-on: ubuntu-latest
    name: Test BaSyx Submodel Service
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci -f ./ci/docker-compose-ci.yml up -d --wait
      - name: Build BaSyx
        run: mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Install BaSyx
        run: mvn clean install -f "basyx.submodelservice/pom.xml"
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down
  test-basyx-conceptdescriptionrepository:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci -f ./ci/docker-compose-ci.yml up -d --wait
      - name: Build BaSyx
        run: mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Install BaSyx
        run: mvn clean install -f "basyx.conceptdescriptionrepository/pom.xml"
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down
  test-basyx-submodelregistry:
    runs-on: ubuntu-latest
    name: Test BaSyx Submodel Registry
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci -f ./ci/docker-compose-registries.yml up -d --wait
      - name: Build BaSyx
        run: mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Install BaSyx
        run: mvn clean install -f "basyx.submodelregistry/pom.xml"
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down
  test-basyx-aasregistry:
    runs-on: ubuntu-latest
    name: Test BaSyx AAS Registry
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci -f ./ci/docker-compose-registries.yml up -d --wait
      - name: Build BaSyx
        run: mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Install BaSyx
        run: mvn clean install -f "basyx.aasregistry/pom.xml"
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down
  test-basyx-aasdiscoveryservice:
    runs-on: ubuntu-latest
    name: Test BaSyx AAS Discovery Service
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'adopt'
          cache: maven
      - name: Start environment
        run: docker compose --project-directory ./ci -f ./ci/docker-compose-ci.yml up -d --wait
      - name: Build BaSyx
        run: mvn clean install ${MVN_ARGS_BUILD_BASYX_NO_TESTS}
      - name: Install BaSyx
        run: mvn clean install -f "basyx.aasdiscoveryservice/pom.xml"
      - name: Stop environment
        if: always()
        run: docker compose --project-directory ./ci down