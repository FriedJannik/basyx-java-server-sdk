server.port=8081
spring.application.name=AAS Discovery Service
basyx.aasdiscoveryservice.name=aas-discovery-service

basyx.backend=InMemory
# H2 Datenquelle-Konfiguration
spring.datasource.url=jdbc:h2:mem:discoverydb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# Optional: Hibernate Dialekt und automatische Schema-Erstellung
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.jpa.hibernate.ddl-auto=update

# H2 Console aktivieren und Pfad festlegen
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

#basyx.backend=MongoDB
#spring.data.mongodb.host=127.0.0.1
##or spring.data.mongodb.host=127.0.0.1
#spring.data.mongodb.port=27017
#spring.data.mongodb.database=concepts
#spring.data.mongodb.authentication-database=admin
#spring.data.mongodb.username=mongoAdmin
#spring.data.mongodb.password=mongoPassword
#basyx.aasdiscoveryservice.mongodb.collectionName=aasdiscovery-service

#alternative
#spring.data.mongodb.uri=mongodb://mongoAdmin:mongoPassword@localhost:27017/?authMechanism=DEFAULT

# basyx.cors.allowed-origins=http://localhost:3000, http://localhost:4000

####################################################################################
# Authorization
####################################################################################
#basyx.feature.authorization.enabled = true
#basyx.feature.authorization.type = rbac
#basyx.feature.authorization.jwtBearerTokenProvider = keycloak
#basyx.feature.authorization.rbac.file = classpath:rbac_rules.json
#spring.security.oauth2.resourceserver.jwt.issuer-uri= http://localhost:9096/realms/BaSyx