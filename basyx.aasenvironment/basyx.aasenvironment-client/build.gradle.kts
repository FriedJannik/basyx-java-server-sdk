/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id("buildlogic.java-conventions")
}

dependencies {
    api(project(":basyx.client"))
    api(project(":basyx.aasenvironment-core"))
    api(project(":basyx.aasrepository-client"))
    api(project(":basyx.aasservice-client"))
    api(project(":basyx.aasrepository-feature-registry-integration"))
    api(project(":basyx.submodelrepository-client"))
    api(project(":basyx.submodelrepository-feature-registry-integration"))
    api(project(":basyx.aasregistry-client-native"))
    api(project(":basyx.submodelregistry-client-native"))
    testImplementation(project( path =":basyx.aasenvironment-core", configuration = "testArtifacts"))
    testImplementation(project( path =":basyx.aasservice-client", configuration = "testArtifacts"))
    testImplementation(project( path =":basyx.aasrepository-feature-registry-integration", configuration = "testArtifacts"))
    testImplementation(project( path =":basyx.submodelrepository-feature-registry-integration", configuration = "testArtifacts"))
    testImplementation(project( path =":basyx.http", configuration = "testArtifacts"))
    testImplementation(project( path =":basyx.aasenvironment-feature-authorization"))
    testImplementation(libs.org.mockito.mockito.core)

    testImplementation(libs.org.apache.httpcomponents.client5.httpclient5)
}

description = "BaSyx AAS Environment Client"

val testsJar by tasks.registering(Jar::class) {
    archiveClassifier = "tests"
    from(sourceSets["test"].output)
}
configurations {
    create("testArtifacts") {
        extendsFrom(testRuntimeClasspath.get())
    }
    all {
        exclude(group = "org.slf4j", module = "slf4j-simple")
    }
}
artifacts {
    add("testArtifacts", testsJar)
}

(publishing.publications["maven"] as MavenPublication).artifact(testsJar)

java {
    withJavadocJar()
}
