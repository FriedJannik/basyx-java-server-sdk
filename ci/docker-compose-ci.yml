version: "3.9"
services:
  mongo:
    image: mongo:5.0.10
    # Provide mongo config
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongoAdmin
      MONGO_INITDB_ROOT_PASSWORD: mongoPassword
    # Set health checks to wait until mongo has started
    healthcheck:
      test: mongo
      interval: 10s
      start_period: 5s
      retries: 5
    # Maps tcp port to host
    ports:
      - 27017:27017
    networks:
      - basyx-java-server-sdk
  
  aas-registry-log-mem:
    image: eclipsebasyx/aas-registry-log-mem:$BASYX_VERSION
    container_name: aas-registry-log-mem
    ports:
      - "8050:8080"
    environment:
      SERVER_SERVLET_CONTEXT_PATH: /
    restart: always
    networks:
      - basyx-java-server-sdk
  
  sm-registry-log-mem:
    image: eclipsebasyx/submodel-registry-log-mem:$BASYX_VERSION
    container_name: sm-registry-log-mem
    environment:
      SERVER_SERVLET_CONTEXT_PATH: /
    ports:
      - "8060:8080"
    restart: always
    networks:
      - basyx-java-server-sdk
  
  secured-aas-registry-log-mem:
    image: eclipsebasyx/aas-registry-log-mem:$BASYX_VERSION
    container_name: secured-aas-registry-log-mem
    ports:
      - "8051:8080"
    environment:
      SERVER_SERVLET_CONTEXT_PATH: /
      BASYX_CORS_ALLOWED_ORIGINS: '*'
      BASYX_CORS_ALLOWED_METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
      BASYX_FEATURE_AUTHORIZATION_ENABLED: true
      BASYX_FEATURE_AUTHORIZATION_TYPE: rbac
      BASYX_FEATURE_AUTHORIZATION_JWTBEARERTOKENPROVIDER: keycloak
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/BaSyx
      BASYX_FEATURE_AUTHORIZATION_RBAC_FILE: file:/rbac/rbac_rules.json
    volumes:
      - ./keycloak/rules/rbac_rules-aas-registry.json:/rbac/rbac_rules.json:ro
    restart: always
    networks:
      - basyx-java-server-sdk
  
  secured-sm-registry-log-mem:
    image: eclipsebasyx/submodel-registry-log-mem:$BASYX_VERSION
    container_name: secured-sm-registry-log-mem
    environment:
      SERVER_SERVLET_CONTEXT_PATH: /
      BASYX_CORS_ALLOWED_ORIGINS: '*'
      BASYX_CORS_ALLOWED_METHODS: GET,POST,PATCH,DELETE,PUT,OPTIONS,HEAD
      BASYX_FEATURE_AUTHORIZATION_ENABLED: true
      BASYX_FEATURE_AUTHORIZATION_TYPE: rbac
      BASYX_FEATURE_AUTHORIZATION_JWTBEARERTOKENPROVIDER: keycloak
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/BaSyx
      BASYX_FEATURE_AUTHORIZATION_RBAC_FILE: file:/rbac/rbac_rules.json
    volumes:
      - ./keycloak/rules/rbac_rules-sm-registry.json:/rbac/rbac_rules.json:ro
    ports:
      - "8061:8080"
    restart: always
    networks:
      - basyx-java-server-sdk

  keycloak:
      build:
        context: ./keycloak
      volumes:
        - ./keycloak/realm:/opt/jboss/keycloak/imports
      ports:
        - 9096:8080
      environment:
        - KEYCLOAK_ADMIN=admin
        - KEYCLOAK_ADMIN_PASSWORD=admin
      networks:
        - basyx-java-server-sdk

  keycloak-fixed-uri:
    image: eclipsebasyx/keycloak:0.0.1
    build:
      context: ./keycloak
      dockerfile: Dockerfile.keycloak
    container_name: keycloak-fixed-uri
    environment:
      KC_HOSTNAME: localhost
      KC_SPI_INITIALIZER_ISSUER_BASE_URI: http://keycloak:8080
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: keycloak-admin
    command: ["start-dev", "--import-realm"]
    ports:
      - 9097:8080
    volumes:
      - ./keycloak/realm:/opt/keycloak/data/import:ro
    networks:
      - basyx-java-server-sdk

networks:
  basyx-java-server-sdk:
    name: basyx-java-server-sdk
    driver: bridge
